import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar
import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id "org.javamodularity.moduleplugin" version "1.8.15" apply false
    id "com.vanniktech.maven.publish" version "0.30.0" apply false
}

group = "$dfxengineGroup"

subprojects {
    apply plugin: "java-library"
    apply plugin: "com.vanniktech.maven.publish"
    apply plugin: "org.javamodularity.moduleplugin"

    group = "$dfxengineGroup"

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    compileTestJava {
        moduleOptions {
            compileOnClasspath = true
        }
    }

    repositories {
        mavenCentral()
    }

    mavenPublishing {
        publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
        configure(new JavaLibrary(new JavadocJar.Javadoc(), true))
        signAllPublications()

        pom {
            url = "https://engine.datafox.me"
            scm {
                connection = "scm:git:git://github.com/melodicore/dfxengine.git"
                developerConnection = "scm:git:ssh://github.com/melodicore/dfxengine.git"
                url = "https://github.com/melodicore/dfxengine"
            }
            licenses {
                license {
                    name = "The Apache License, Version 2.0"
                    url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                }
            }
            developers {
                developer {
                    id = "datafox"
                    name = "Lauri \"datafox\" Heino"
                    email = "datafox@datafox.me"
                }
            }
        }
    }
}

apply plugin: "java"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.slf4j:slf4j-api:$slf4jVersion"
}

task allJavadoc(type: Javadoc, group: "documentation") {
    source sourceSets.main.allJava + subprojects.sourceSets.main.allJava
    classpath = files(subprojects.sourceSets.main.compileClasspath) + files(subprojects.sourceSets.main.output)
    destinationDir = file(layout.buildDirectory.dir("docs/javadoc-all"))
    title "DFXEngine"
    exclude "module-info.java"
    exclude "**/internal/**"
    exclude "**/handles/utils/**"
    exclude "**/injector/utils/**"
}